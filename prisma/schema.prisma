// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Role Table
model Role {
  id         Int          @id @default(autoincrement())
  roleType   String       @db.VarChar(50)
  roleDesc   String       @db.VarChar(255)
  User       User[]
  RolePrivellege RolePrivellege[]
}

// User Table
model User {
  id        Int     @id @default(autoincrement())
  firstName String  @db.VarChar(20)
  lastName  String  @db.VarChar(20)
  email     String  @unique
  password  String  @db.VarChar(20)
  role      Role    @relation(fields: [roleId], references: [id])
  roleId    Int
  loggedIn  Boolean @default(false)
}

// Menu Table
model Menu {
  id         Int          @id @default(autoincrement())
  menu_name  String
  RolePrivellege RolePrivellege[]
}

// Role Permission Table
model RolePrivellege {
  id     Int  @id @default(autoincrement())
  role  Role @relation(fields: [role_id], references: [id])
  role_id Int
  menu  Menu @relation(fields: [menu_id], references: [id])
  menu_id Int
  value Boolean @default(false)
}

// Kategori Akun Table
model Kategori {
  id   Int    @id @default(autoincrement())
  name String
  saldo_normal_id Int
  saldo_normal_nama String

  Akun Akun[]
}

// Tipe Akun Table
model TipeAkun {
  id   Int    @id @default(autoincrement())
  name String
  Akun Akun[]
}

// Akun table
model Akun {
  id            Int      @id @default(autoincrement())
  kode_akun     String
  tipe_akun     TipeAkun @relation(fields: [tipeId], references: [id])
  tipeId        Int
  nama_akun     String
  kategori_akun Kategori @relation(fields: [kategoriId], references: [id])
  kategoriId    Int
  // Saldo           Saldo[]
  Pajak1        Pajak[]  @relation("akunPenjual")
  Pajak2        Pajak[]  @relation("akunPembeli")

  Kontak1 Kontak[] @relation("akunPiutang")
  Kontak2 Kontak[] @relation("akunHutang")

  Produk1 Produk[] @relation("akunPembelian")
  Produk2 Produk[] @relation("akunPenjualan")

  HeaderBiaya1  HeaderBiaya[] @relation("akun_kas_bank")
  HeaderBiaya2  HeaderBiaya[] @relation("akun_pendapatan")
  DetailBiaya   DetailBiaya[]

  HeaderPenjualan1           HeaderPenjualan[] @relation("akunPemotonganPenjualan")
  HeaderPenjualan2           HeaderPenjualan[] @relation("akunUangMukaPenjualan")
  JurnalPenjualan            JurnalPenjualan[] @relation("akunJurnalPenjualan")
  JurnalPenerimaanPembayaran JurnalPenerimaanPembayaran[] @relation("akunPenerimaanPembayaran")

  HeaderPembelian1          HeaderPembelian[] @relation("akunPemotonganPembelian")
  HeaderPembelian2          HeaderPembelian[] @relation("akunUangMukaPembelian")
  JurnalPembelian           JurnalPembelian[]         @relation("akunJurnalPembelian")
  JurnalPengirimanBayaran   JurnalPengirimanBayaran[] @relation("akunPengirimanBayaran") 
}

// Kategori Kontak
model KategoriKontak {
  id   Int    @id @default(autoincrement())
  nama String

  KontakDetail KontakDetail[]
}

// Kategori Produk
model KategoriProduk {
  id     Int      @id @default(autoincrement())
  nama   String
  jumlah Int
  Produk Produk[]
}

// Satuan Produk
model SatuanProduk {
  id        Int @id @default(autoincrement())
  satuan    String 

  Produk    Produk[]
}

// Kontak Table
model Kontak {
  id                      Int         @id @default(autoincrement())
  nama_panggilan          String
  gelar                   String
  nama                    String
  nomor_hp                String
  tipe_identitas          String
  nomor_identitas         String
  email                   String
  info_lain               String
  nama_perusahaan         String
  nomor_telepon           String
  nomor_fax               String
  nomor_npwp              String
  alamat_pembayaran       String
  alamat_pengiriman       String
  nama_bank               String
  kantor_cabang_bank      String
  pemegang_akun_bank      String
  nomor_rekening          String  
  piutang                 Akun        @relation("akunPiutang", fields: [akun_piutang], references: [id])
  akun_piutang            Int
  hutang                  Akun        @relation("akunHutang", fields: [akun_hutang], references: [id]) 
  akun_hutang             Int
  syarat_pembayaran_utama String
  
  HeaderPenjualan               HeaderPenjualan[]
  HeaderPembelian               HeaderPembelian[]

  KontakDetail KontakDetail[]
  HeaderBiaya HeaderBiaya[]
}

// Kontak Detail
model KontakDetail {
  id     Int  @id @default(autoincrement())
  kontak  Kontak @relation(fields: [kontak_id], references: [id])
  kontak_id Int
  kontak_type  KategoriKontak @relation(fields: [kontak_type_id], references: [id])
  kontak_type_id Int
}

// Produk table
model Produk {
  id                  Int            @id @default(autoincrement())
  nama                String
  image               String
  kode_sku            String
  kategori_produk     KategoriProduk @relation(fields: [kategori_produk_id], references: [id])
  kategori_produk_id  Int
  satuan              SatuanProduk @relation(fields: [unit], references: [id])
  unit                Int
  deskripsi           String
  quantity            Int

  harga_beli_satuan   Int
  pembelian           Akun   @relation("akunPembelian", fields: [akun_pembelian], references: [id])
  akun_pembelian      Int

  harga_jual_satuan   Int
  penjualan           Akun   @relation("akunPenjualan", fields: [akun_penjualan], references: [id])
  akun_penjualan      Int

  DetailPenjualan DetailPenjualan[]
  DetailPembelian DetailPembelian[]
}

// Pajak Table
model Pajak {
  id              Int    @id @default(autoincrement())
  nama            String
  presentasaAktif Int
  kategori1       Akun   @relation("akunPenjual", fields: [akunPenjual], references: [id])
  akunPenjual     Int
  kategori2       Akun   @relation("akunPembeli", fields: [akunPembeli], references: [id])
  akunPembeli     Int

  DetailPenjualan DetailPenjualan[]

  DetailPembelian DetailPembelian[]

  DetailBiaya DetailBiaya[]
}
// Header Penjualan Table
model HeaderPenjualan {
  id                      Int       @id @default(autoincrement())
  kontak                  Kontak    @relation(fields: [kontak_id], references: [id])
  kontak_id               Int
  nama_supplier           String
  email                   String
  alamat_supplier         String
  tgl_transaksi           String
  tgl_jatuh_tempo         String
  syarat_pembayaran       String
  no_ref_penagihan        String
  no_transaksi            Int      @unique()  
  tag                     String
  pesan                   String
  memo                    String
  file_attachment         String
  subtotal                Int
  total_diskon_per_baris  Int
  diskon                  Int
  total_diskon            Int
  total_pajak_per_baris   Int
  total                   Int
  balance                 Int
 
  pemotongan              Int
  pemotongan_total        Int
  akun1                   Akun      @relation("akunPemotonganPenjualan", fields: [akun_pemotongan], references: [id])
  akun_pemotongan         Int

  uang_muka               Int
  akun2                   Akun      @relation("akunUangMukaPenjualan", fields: [akun_uang_muka], references: [id])
  akun_uang_muka          Int
  sisa_tagihan            Int

  DetailPenjualan         DetailPenjualan[]
  JurnalPenjualan         JurnalPenjualan[]
  PenerimaanPembayaran    PenerimaanPembayaran[]
  JurnalPenerimaanPembayaran  JurnalPenerimaanPembayaran[]
}

// Detail Penjualan Table
model DetailPenjualan {
  id                      Int         @id @default(autoincrement())
  header_penjualan        HeaderPenjualan   @relation(fields: [header_penjualan_id], references: [id])
  header_penjualan_id     Int
  produk                  Produk      @relation(fields: [produk_id], references: [id])
  produk_id               Int
  nama_produk             String
  desk_produk             String
  kuantitas               Int
  satuan                  String
  harga_satuan            Int
  diskon                  Int
  hasil_diskon            Int
  
  pajak                   Pajak       @relation(fields: [pajak_id], references: [id])
  pajak_id                Int
  pajak_nama              String
  pajak_persen            Int
  hasil_pajak             Int

  jumlah                  Int
}

// Jurnal Penjualan Table
model JurnalPenjualan {
  id                  Int             @id @default(autoincrement())
  header_penjualan    HeaderPenjualan @relation(fields: [header_penjualan_id], references: [id])
  header_penjualan_id Int
  
  akun                Akun      @relation("akunJurnalPenjualan", fields: [akun_id], references: [id])
  akun_id             Int
  akun_name           String

  debit               Int
  kredit              Int
}

// Penerimaan Pembayaran Table
model PenerimaanPembayaran {
  id                  Int             @id @default(autoincrement())
  header_penjualan    HeaderPenjualan @relation(fields: [header_penjualan_id], references: [id])
  header_penjualan_id Int

  cara_penagihan      String
  jumlah              Int
}

// Jurnal Penerimaan Pembayaran 
model JurnalPenerimaanPembayaran {
  id                  Int             @id @default(autoincrement())
  header_penjualan    HeaderPenjualan @relation(fields: [header_penjualan_id], references: [id])
  header_penjualan_id Int
  
  akun                Akun      @relation("akunPenerimaanPembayaran", fields: [akun_id], references: [id])
  akun_id             Int
  akun_name           String

  debit               Int
  kredit              Int
}

// Header Pembelian Table
model HeaderPembelian {
  id                      Int       @id @default(autoincrement())
  kontak                  Kontak    @relation(fields: [kontak_id], references: [id])
  kontak_id               Int
  nama_supplier           String
  email                   String
  alamat_supplier         String
  tgl_transaksi           String
  tgl_jatuh_tempo         String
  syarat_pembayaran       String
  no_ref_penagihan        Int
  no_transaksi            Int       @unique()       
  tag                     String
  pesan                   String
  memo                    String
  file_attachment         String
  subtotal                Int
  total_diskon_per_baris  Int
  diskon                  Int
  total_diskon            Int
  total_pajak_per_baris   Int
  total                   Int
 
  pemotongan              Int
  pemotongan_total        Int
  akun1                   Akun      @relation("akunPemotonganPembelian", fields: [akun_pemotongan], references: [id])
  akun_pemotongan         Int

  uang_muka               Int
  akun2                   Akun      @relation("akunUangMukaPembelian", fields: [akun_uang_muka], references: [id])
  akun_uang_muka          Int
  sisa_tagihan            Int

  DetailPembelian         DetailPembelian[]
  JurnalPembelian         JurnalPembelian[]
  PengirimanBayaran       PengirimanBayaran[]
  JurnalPengirimanBayaran JurnalPengirimanBayaran[]
}

// Detail Pembelian Table
model DetailPembelian {
  id                      Int         @id @default(autoincrement())
  header_pembelian        HeaderPembelian   @relation(fields: [header_pembelian_id], references: [id])
  header_pembelian_id     Int
  produk                  Produk      @relation(fields: [produk_id], references: [id])
  produk_id               Int
  nama_produk             String
  desk_produk             String
  kuantitas               Int
  satuan                  String
  harga_satuan            Int
  diskon                  Int
  hasil_diskon            Int
  
  pajak                   Pajak       @relation(fields: [pajak_id], references: [id])
  pajak_id                Int
  pajak_nama              String
  pajak_persen            Int
  hasil_pajak             Int

  jumlah                  Int
}

// Jurnal Pembelian Table
model JurnalPembelian {
  id                    Int             @id @default(autoincrement())
  header_pembelian      HeaderPembelian   @relation(fields: [header_pembelian_id], references: [id])
  header_pembelian_id   Int
  
  akun                  Akun      @relation("akunJurnalPembelian", fields: [akun_id], references: [id])
  akun_id               Int
  akun_name             String

  debit                 Int
  kredit                Int
}

// Pengiriman Bayaran Table
model PengirimanBayaran {
  id                    Int             @id @default(autoincrement())
  header_pembelian      HeaderPembelian   @relation(fields: [header_pembelian_id], references: [id])
  header_pembelian_id   Int

  cara_penagihan        String
  jumlah                Int
}

// Jurnal Pengiriman Bayaran Table
model JurnalPengirimanBayaran {
  id                    Int             @id @default(autoincrement())
  header_pembelian      HeaderPembelian   @relation(fields: [header_pembelian_id], references: [id])
  header_pembelian_id   Int
  
  akun                  Akun      @relation("akunPengirimanBayaran", fields: [akun_id], references: [id])
  akun_id               Int
  akun_name             String

  debit                 Int
  kredit                Int
}



// Header Biaya Table
model HeaderBiaya {
  id              Int    @id @default(autoincrement())
  akun1           Akun   @relation("akun_kas_bank", fields: [akun_kas_bank], references: [id])
  akun_kas_bank   Int
  kontak          Kontak @relation(fields: [nama_penerima], references: [id])
  nama_penerima   Int
  tgl_transaksi   String
  cara_pembayaran String
  no_transaksi    Int    @unique

  alamat_penagihan String
  tag              String

  memo     String
  lampiran String

  subtotal          Int
  pajak             Int
  akun2             Akun  @relation("akun_pendapatan", fields: [akun_pemotongan], references: [id])
  akun_pemotongan   Int
  pemotongan        Int
  jumlah_pemotongan Int
  total             Int

  detail_biaya DetailBiaya[]
}

// Detail Biaya Table
model DetailBiaya {
  id              Int         @id @default(autoincrement())
  header_biaya    HeaderBiaya @relation(fields: [header_biaya_id], references: [no_transaksi])
  header_biaya_id Int

  akun_biaya    Akun   @relation(fields: [akun_biaya_id], references: [id])
  akun_biaya_id Int
  deskripsi     String
  pajak         Pajak  @relation(fields: [pajak_id], references: [id])
  pajak_id      Int
  jumlah        Int
}
